#!/bin/bash
# this is <gplphrase>
# ----------------------------------------------------------------------------
# 
# Copyright (c) 2006 by Thomas Forbriger (BFO Schiltach) 
# 
# apply GPL phrase to header
#
# ----
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version. 
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
# ----
# 
# REVISIONS and CHANGES 
#    28/03/2006   V1.0   Thomas Forbriger
#    13/12/2006   V1.1   add support for Matlab files
#    21/05/2012   V1.2   add support for shell scripts
#    31/12/2012   V1.3   support explicit type selection (useful for shell
#                        scripts)
#    20/05/2015   V1.4   take GPL phrase from git repository
#    04/10/2015   V1.5   add type txt
# 
# ============================================================================
#
tmpfile=/tmp/new$$.tmp

# check whether script is executed within a git repositories working tree
GIT_DIR=$(git rev-parse --git-dir) || \
  { 
    echo >&2
    echo >&2 "$(basename $0)" \
    "is designed to be used within a git working directory";
    echo >&2 "aborting..."
     exit 2;
   }

# find SHA1 id of blob containing GPL phrase
GPLPHRASE=$(git --git-dir=$GIT_DIR ls-tree --full-tree -r HEAD \
  | grep GPLphrase | cut -f 3 -d ' ' | cut -f 1)

# check for valid SHA1 id
test $(echo $GPLPHRASE | wc -c) -eq 41 || \
  {
    echo >&2
    echo >&2 "$(basename $0)" \
    "is designed to take GPL phrase from the git repository"
    echo >&2 "cannot find a file named GPLphrase in the HEAD commit"
    echo >&2 "aborting..."
     exit 2;
  }

git --git-dir=$GIT_DIR cat-file blob $GPLPHRASE

MYNAME="$(grep $(id -un) /etc/passwd | cut -f 5 -d ':')"
MYYEAR="$(date +'%Y')"

echo Apply GPL phrase to source code

# take extension explicitely from command line, if first option is -type
extset=0
if test "z$1" == "z-type"
then
  extset=1
  extis=$2
  shift
  shift
fi

while test -n "$1"
do
  echo
  echo process $1
  if test ! -e $1
  then
    echo "ERROR: file does not exist!"
  else
# extract file type and ranges
    if test $extset -lt 1
    then
      nfields=$(echo $1 | tr '.' ' ' | wc -w)
      ext=$(echo $1 | cut -d . -f $nfields)
    else 
      ext=$extis
    fi
    case $ext in
      cc) nhead=12; PREFIX=' *';;
      c) nhead=6; PREFIX=' *';;
      h) nhead=12; PREFIX=' *';;
      m) nhead=2; PREFIX='%';;
      f) nhead=7; PREFIX='c';;
      awk) nhead=8; PREFIX='#';;
      inc) nhead=7; PREFIX='c';;
      py) nhead=8; PREFIX='#';;
      sh) nhead=8; PREFIX='#';;
      pl) nhead=8; PREFIX='#';;
      txt) nhead=8; PREFIX='#';;
      *) echo "ERROR: unknown extension: $ext!"; nhead=-1;;
    esac
    if test $nhead -lt 0
    then
      base=$(echo $1 | cut -c 2-8)
      if test "$base" = akefile
      then
        nhead=7
        PREFIX='#'
      fi
      if test "$base" = EADME
      then
        nhead=7
        PREFIX=''
      fi
    fi
    ntail=$(expr $nhead + 1)
# process file
    if test $nhead -lt 0
    then
      echo "skipping $1..."
    else
      /bin/cp -vpd $1 $1.bak
      /bin/cp -vpd $1 $tmpfile
      head -n $nhead $1 > $tmpfile
      echo "$PREFIX" >> $tmpfile
      case $ext in
        m) echo "$PREFIX Copyright $MYYEAR by $MYNAME" >> $tmpfile
      esac
      echo "$PREFIX ----" >> $tmpfile
      git --git-dir=$GIT_DIR cat-file blob $GPLPHRASE \
        | sed -e 's/^#/'"$PREFIX"'/' >> $tmpfile
      echo "$PREFIX ----" >> $tmpfile
      echo "$PREFIX" >> $tmpfile
      tail -n +$ntail $1 >> $tmpfile
      vim $tmpfile
      /bin/mv -fv $tmpfile $1
    fi
  fi
  shift
done

# ----- END OF gplphrase ----- 
