this is <README>
============================================================================
hd: SFF header manipulation
============================================================================

This is a collection of tools that support SFF (Stuttgart File Format)
header manipulation. All file formats supported by libdatrwxx can be handled
with the following programs:
chacox, offlix, tijerasxx, sehefixx

Programs provided in this subdirectory:

sehefixx  sets trace header fields and operates on all data formats
          supported by libdatrwxx
cooset    this program sets receiver and source coordinates for global
          seismic data; receiver coordinates are obtained from a table of
          seismic stations
tijerasxx extract portions of time series (windowing - not tapering)

coma      creates a table of equidistant receiver coordinates
chaco     uses a tabel produced by coma to set receiver and source
          coordinates in an SFF data file
offli     prints a list of receiver offsets contained in an SFF file
          this program provied different output formats to craete control
          files for refmet, chaco, or wolle info files

epi       prints a list of receiver offsets contained in an SFF file
merse     combines all traces from several different SFF input data files
          within one single SFF data file (does no waveform stacking); use
          fidase if you want to manipulate the waveform too and if you want
          to stack data at identical offsets

Obsolete programs, which are superseded by the above programs and which will
no longer be maintained:

sehefi    sets the fields station, channel, auxid and instype in the WID2
          lines of an SFF data file to explicite values
sesoc     set the source coordinate in an SFF data file
sesot     set the source time in an SFF data file

============================================================================
Test cases
----------

In subdirectory 'testcases' test cases are provided. These are not yet
documented in detail. Please check Makefile in testcases, which serves as an
entry point to the other Makefiles. Usually the test cases can be controlled
by make variables to be passed on the command line. Test cases may require
other external programs in order to create test waveforms. These programs can
include programs for synthesis of full seismograms. At least the program suite
from src/synt/misc is required in most cases.

==========================================================================

Installation
------------

This software is part of the project Seitosh. See README.1st in the root
directory of the collection or https://git.scc.kit.edu/Seitosh/Seitosh for
general installation instructions.


The Makefile supports program compilation and linking. Some binary libraries
are required. 

The command
  make all
will compile and install the binary executables. 

Environment variables control where the results are stored and where
libraries and library header files are expected:
  LOCLIBDIR       defines location of binary libraries
  LOCINCLUDEDIR   defines location of C/C++ header files (prototypes)
  TF_WWWBASEDIR   defines location of doxygen output (used by some libraries)

Dependencies:
  
  Seitosh libraries required to compile the code:
    libaff        provides libaff.a
    libdatrwxx    provides libdatrwxx.a
    libfapidxx    provides libfapidxx.a
    libgsexx      provides libgsexx.a
    libsff        provides libsff.a
    libsffu       provides libsffu.a
    libsffxx      provides libsffxx.a
    libtf         provides libtf.a
    libtfxx       provides libtfxx.a
    libtime       provides libtime_trad.a and libtime++.a

============================================================================

The home of this software suite is
https://git.scc.kit.edu/Seitosh/Seitosh/tree/master/src/ts/hd

Please send bug reports and suggestions to
Thomas.Forbriger@kit.edu

----- END OF README ----- 
