this is <README>
============================================================================
ts/wf: time series waveform filters
============================================================================

This is a collection of various filter programs which can be used to
manipulate time series data. The area of application ranges from long period
seismology to shallow seismics.

Some of the programs support only SFF data files. See usage information (by
calling the program with option '-help') for details. Some Fortran programs
support linking against libfapidxx. They commonly are provided in form of two
binary executables (e.g. susei: SFF support only; suseix: supports all
libdatrwxx formats). See variable PROGRAMS in Makefile.

Currently maintained programs:

Waveform filters
----------------
Programs provide frequency filters (high-pass, low-pass, etc), average and
trend removal, time domain tapers, etc. 
  stufi     filter SFF data files (uses seife filters by E. Wielandt)
  tidofi    filter data files in various formats
  tsfilt    filter two-column ASCII files (uses seife filters by E. Wielandt)

Vector signal component rotation
--------------------------------
  coro      select a spatial vector component from three component data
  rotate    rotate horizontal components
  xyz2uvw   rotate to internal STS-2 components and vice versa

Multi-signal
------------
  dise      calculate waveform residuals of selected traces from two input files
  gatherdiff calculate waveform residuals of full shot gathers
  sigfit    find linear regression coefficients for a set of trial signals
  susei     stack seismograms from two or more files
  suspect   stack seismograms after shifting to source origin time
  teseco    apply signal corrections (like barometric pressure correction)

Transformation
--------------
  evelo     calculate Hilbert transform, signal envelope, etc.
  foutra    apply Fourier transformation (optionally calculates PSD)

  fregra    spectrogram for unevenly sampled frequencies (not finished)

Correlation and Convolution
---------------------------
  autocorr  calculate autocorrelation of signals
  cross     cross-correlate signals
  deconv    deconvolve one signal with another
  noisymize convolve signals with random noise

Resampling
----------
  resaseda  apply signal interpolation in the time domain
  smoos     apply signal interpolation by spectral extension

Miscellaneous
-------------
  fidasexx  scale shot gathers to compile homogeneous data set
  geophone  derive geophone response and create filter control file
  sigscale  scale SG056 auxilliary data to physical units
  sigval    extract waveform properties like rms and write to table
  soutifu   find optimal source wavelet correction filter 
  tisli     extract time slices from multi-receiver data

Test signals
------------
Test signal generators formerly present in this directory have been moved to
src/synt/misc. They may as well still be necessary for the filter test
procedures defined in subdirectory testcases

============================================================================
Test cases
----------

In subdirectory 'testcases' test cases for several filter programs are
provided. These are not yet documented in detail. Please check Makefile in
testcases, which serves as an entry point to the other Makefiles. Several of
the test cases can be controlled by make variables to be passed on the command
line. Test cases may require other external programs in order to create test
waveforms. These programs can include programs for synthesis of full
seismograms. At least the program suite from src/synt/misc is required in most
cases.

============================================================================

Installation
------------

This software is part of the project Seitosh. See README.1st in the root
directory of the collection or https://git.scc.kit.edu/Seitosh/Seitosh for
general installation instructions.


The Makefile supports program compilation and linking. Some binary libraries
are required. 

The command
  make all
will compile and install the binary executables as well as the doxygen
documentation.

Environment variables control where the results are stored and where
libraries and library header files are expected:
  LOCLIBDIR           defines location of binary libraries
  LOCINCLUDEDIR       defines location of C/C++ header files (prototypes)
  LOCBINDIR           defines location of binary executables
  TF_WWWBASEDIR       defines location of doxygen output

Dependencies:
  Compilers required to build the programs:
    Fortran compiler
    C++ compiler
    C/C++ preprocessor
    doxygen (required to process source code documentation)

  extern libraries/packages needed to compile the code
    PGPLOT (libpgplot, libcpgplot)
    liblapack:      linear algebra package
    libblas:        basic linear algebra functions
    libgsl:         GNU scientific library (libgsl, libgslcblas)
    The header files for these libraries are required as well. Under OpenSuSE
    you have to install the respective devel packages.
  
  Seitosh libraries required to compile the code:
    libaff
    libdatrwxx
    libfapidxx
    libfourier (libfourier, libfourierxx)
    libgsexx
    liblinearxx
    libpgplotxx 
    libseife (libcseife, libseife)
    libsff
    libsffu
    libsffxx
    libstfinv
    libtf
    libtfxx
    libtime (libtime, libtime++)
    libtsxx

============================================================================

The home of this software suite is
https://git.scc.kit.edu/Seitosh/Seitosh/tree/master/src/ts/wf

Please send bug reports and suggestions to
Thomas.Forbriger@kit.edu

----- END OF README ----- 
