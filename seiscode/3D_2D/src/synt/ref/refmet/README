this is <README>
============================================================================
Reflectivity method by Joahim Ungerer (1990)
============================================================================
NOTICE: this README is still under construction. Information is partly
incomplete and inconsistent.

Reflectivity Method

This program calculates synthetic seismograms using the reflectivity
method. The solution contains the full wavefield including far- and
nearfield for a moment tensor point source. The original code is due
to J. Ungerer (refseis.f 1990). It was changed and supplemented by 
T. Forbriger (refmet.f 1997).

Ungerer, J., 1990.
  Berechnung von Nahfeldseismogrammen mit der Reflektivitätsmethode, 
  Diplomarbeit, Institut für Geophysik der Universität Stuttgart.

Müller, G., 1985.
  The reflectivity method: a tutorial, J. Geophys., 58, 153-174.

Fuchs, K. and Müller, G., 1971.
  Computation of Synthetic Seismograms with the Reflectivity Method and
  Comparison with Observations. Geophys. J. R. astr. Soc., 23(4), 417-433.

The original reflectivity code by Joachim Ungerer
is put into the public domain by Erhard Wielandt:
http://www.software-for-seismometry.de/software/refseis/

This package contains reflectivity code based on an implementation by
Joachim Ungerer. Currently supported binary executables:

  refmet
  refmetx
    A version of refmet which is linked against libdatrwxx and such provides
    all output data formats supported by libdatrwxx.
  grema
    this is a modified Version of resus just to extract a
    vertical component greens matrix from a reflectivity matrix
  matbau
  refmat
  resus
    this is a special version calculating seismograms from a matrix-file
  resusnoise
    Create noise seismograms from refmat coefficients
    this is a version derived from resus.f
    convolves the data of each receiver with gaussian noise
    all receivers will be stacked immediatly

============================================================================

Installation
------------

This software is part of the project Seitosh. See README.1st in the root
directory of the collection or https://git.scc.kit.edu/Seitosh/Seitosh for
general installation instructions.


The Makefile supports program compilation and linking. Some binary libraries
are required.

The command
  make all
will compile and install the binary executables.

Environment variables control where the results are stored and where
libraries and library header files are expected:
  LOCLIBDIR           defines location of binary libraries
  LOCINCLUDEDIR       defines location of C/C++ header files (prototypes)
  LOCBINDIR           defines location of binary executables

Dependencies:
  Compilers required to build the programs:
    Fortran compiler
    C++ compiler
    C/C++ preprocessor

  extern libraries/packages needed to compile the code
    libblas:        basic linear algebra functions
    libgsl:         GNU scientific library (libgsl, libgslcblas)
    The header files for these libraries are required as well. Under OpenSuSE
    you have to install the respective devel packages.

  Seitosh libraries required to compile the code:
    libaff
    libdatrwxx
    libfapidxx
    libgsexx
    libsff
    libsffxx
    libtf
    libtime (libtime, libtime++)
    libemod
    librefpar
    librefread (Part of refmet)

============================================================================

The home of this software suite is
https://git.scc.kit.edu/Seitosh/Seitosh/tree/master/src/synt/ref/refmet

Please send bug reports and suggestions to
Thomas.Forbriger@kit.edu

----- END OF README ----- 
