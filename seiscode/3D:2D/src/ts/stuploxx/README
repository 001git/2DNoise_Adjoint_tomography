this is <README>
============================================================================
some notes concerning stuploxx
============================================================================

7.8.2008 todo:

  - provide size setting for y labels
    The numeric labels are produced according to the settings in
    pgplot::Tboxstyle
    This class should allow the selection of character height for
    x-labels and y-labels
  - y label size then must be used in stuplo::ChartStepWindowPanel::plot
  - pgplot should provide a function that allows to calculate the character
    height setting when specifying character height as a fraction of viewport
    size.
    the algorithm is coded in stuplo::ChartStepWindowPanel::plot at its bottom

2.3.2008 next:
- add option to display most recent relative time
  this option sets the plot program to use the most recent time span after
  re-reading the data

- use double key sequences to control scaling:
  [t][o] set to original time
  [t][i] initialize time
  [t][z] zoom time scale
  [s][i] initialize all scales
  [s][o] set to original scales
  [s][z] zoom ordinate scale of selected panel
  [z] zoom into selected panel

- provide non-overlapping graph and label

============================================================================

program comments before February 2008:
======================================

 *
 * - plot style parameters may be selected per file name entry
 * - traces from the same file may be plotted with differnt styles by using
 *   the same filename several times on the command line
 * - only two modes will be provided: all panels use the same time scale or
 *   each panel has its own time scale
 * - implement chart stepper functionality
 *
 * About the way data files are read:
 * 1. The function 
 *    setparameters (const tfxx::cmdline::Tparsed &fns, const PGstyle &pgs)
 *    creates a list of type TFileParametersList from
 *    a) all command line arguments including file specific options as stored
 *       an object of type tfxx::cmdline::Tparsed
 *    b) all default pgplot settings 
 *    Each list element is of type FileParameters and contains the filename
 *    with command line parameters together with file specific parameters.
 *
 *    This list is created only once. It is an image of the configuration
 *    passed through the command line. At this point the number of traces to
 *    be read and processed is not necessarily defined yet. This may still
 *    depend on the number of traces that are met in each file.
 *
 *    When rereading the data, we have to return to this list of type
 *    TFileParametersList. The next time we read data files, the number of
 *    traces may be different. This is no problem, this is a feature. The
 *    program will react flexible on the actual contents of the file. The
 *    command line definitions represent the intention of the user in an
 *    abstract way.
 *
 * 2. The function
 *    readdata (const TFileParametersList &fpl)
 *    reads the data files and creates a list of type TDataFileList. The
 *    elements in this list are of type DataFile. They contain the file
 *    specific settings in an object of type FileParameters together with the
 *    actual trace data in an object of type TSFile.
 *
 *    This step just adds actual data to the definitions taken from the
 *    command line.
 *
 * 3. The function 
 *    setuppanels (const TDataFileList &fpl)
 *    takes the definitions together with the trace data and splits the file
 *    into traces. These traces will then be associated to plot panels
 *    depending upon the settings defined by the user. The result of this
 *    function is a vector of type TPanelVector. Each element in this vector is
 *    of type Panel and contains a list of type TDataTraceList. This list
 *    contains all traces to be plot within in the specific panel. The
 *    elements in the object of type TDataTraceList are of type DataTrace.
 *    This struct contains the parameters of the file from which the trace was
 *    obtained in an object of type FileParameters together with the trace
 *    data in and object to type Ttimeseries.
 *
 * 4. The function
 *    plotdata (pgplot::basic_device &dev, const TPanelVector &pl, const PGstyle
 *    &)
 *    takes the vector of panels together with a PGPLOT device class and
 *    PGPLOT style settings and creates the graphical display of the data. It
 *    is called within a loop the supports interactive modification of plot
 *    parameters.
 *
 * weitere Vorgehensweise:
 * - alle Dateien mit allen Spuren in single precision einlesen
 * - dazu SFile analog zu DFile in libtfxx anlegen
 * - Alle Spuren auf ihre Panels verteilen zusammen mit den Plotparametern von
 *   der Kommandozeile
 * - plotten
 * damit wäre ein erster vernünftiger Ausbauzustand erreicht. Damit kann das
 * Programm für Tagesplots und zur interaktiven Datensichtung benutzt werden.
 * Weiteres kann jederzeit folgen...

----- END OF README ----- 
