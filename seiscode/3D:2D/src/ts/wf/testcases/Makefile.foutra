# this is <Makefile.foutra>
# ----------------------------------------------------------------------------
# 
# Copyright (c) 2011 by Thomas Forbriger (BFO Schiltach) 
# 
# test foutra
#
# ----
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version. 
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
# ----
#
# 
# REVISIONS and CHANGES 
#    24/06/2011   V1.0   Thomas Forbriger
#    03/06/2012   V1.1   extended test case to adjust number of samples
# 
# ============================================================================
#

# test foutra PSD scaling
# -----------------------
#
# call
#   make clean
#   make noise.xxx.psp
#
# you can pass values for the following three variables:
NOISERMS=70.
NOISEDT=0.01
NOISET=500.
NOISEOPT=-logascii -avgascii -rbw=0.5 
NOISEPROG=siggenx
NOISETYPE=14
NOISEDEBUG=
# NOISEOPT=-pad 5 -nsegments 5
#
# NOISERMS: rms value for white noise to be analysed
# NOISEDT: sampling interval for noise test trace
# NOISET: duration of noise test trace
# NOISEOPT: additional options to be passed to foutra
#
noise.xxx.fnycalc:
	printf "0.5\n$(NOISEDT)\n/\np\n" > $@
noise.xxx.fny: noise.xxx.fnycalc
	dc --file=$< > $@
noise.xxx.ascii:
	$(NOISEPROG) $(NOISETYPE) $@ $(NOISEDEBUG)\
	  -v -o -T $(NOISET) -d $(NOISEDT) -a $(NOISERMS) -ot ascii
noise.xxx.001.asc: noise.xxx.ascii
	foutra -v -o -rms -ASCII=$(patsubst %.001.asc,%,$@) $(NOISEOPT) \
        -type ascii -power junk.xxx.sff $< \
        | tee noise.xxx.log | grep rms-value > noise.xxx.rms
	cat noise.xxx.log
noise.tap.xxx.ascii: noise.xxx.ascii
	foutra -v -o -type ascii -Type ascii $@ $<
noise.xxx.gpt: noise.xxx.001.asc noise.xxx.fny
	echo "set output 'noise.xxx.ps'" > $@
	echo "set terminal postscript enhanced" >> $@
	echo "set logscale xy" >> $@
	echo "set grid" >> $@
	echo "power=$(NOISERMS)**2" >> $@
	echo "fNy=0.5/$(NOISEDT)" >> $@
	echo "PSD=power/fNy" >> $@
	printf "set title '$(shell cat noise.xxx.rms) counts; " >> $@
	echo "f_{Nyquist}=$(shell cat $(word 2,$^)) Hz'" >> $@
	echo "set xlabel 'frequency / Hz'" >> $@
	echo "set ylabel 'PSD / counts^{2} Hz^{-1}'" >> $@
	printf "plot '$<' t 'PSD calculated by foutra' w l," >> $@
	echo "PSD t 'expected PSD'" >> $@
noise.xxx.ps: noise.xxx.gpt
	gnuplot $<
noise.sig.xxx.ps: noise.xxx.ascii noise.tap.xxx.ascii
	stuplox -d $@/ps -g -l 3,2,1 -h 1.2,1.2,1.5,1.2 -ty ascii \
	  -u counts -s x -i -Y 0.8 -c fin $^ 

#----------------------------------------------------------------------
# test foutra scaling for harmonic signals
# ----------------------------------------
#
# call
#   make clean
#   make harmspec.xxx.psp
# to test foutra scaling for harmonic signals
#
# you can pass values for the following three variables:
HARMSF1=1.5
HARMSA1=1.
HARMSF2=1.3
HARMSA2=1.5
HARMSF3=0.6
HARMSA3=2.2
HARMSTAPER=
# HARMSTAPER=-boxcar
#
# HARMSF<N>: frequency of signal <N> 
# HARMSA<N>: amplitude of signal <N>
# HARMSTAPER: can be used to switch to boxcar taper
#
sine1.xxx.sff: ;siggen 1 $@ -v -o -f $(HARMSF1) -a $(HARMSA1) -T 800. -d 0.01
sine2.xxx.sff: ;siggen 1 $@ -v -o -f $(HARMSF2) -a $(HARMSA2) -T 800. -d 0.01
sine3.xxx.sff: ;siggen 1 $@ -v -o -f $(HARMSF3) -a $(HARMSA3) -T 800. -d 0.01
harmonic.xxx.sff: sine1.xxx.sff sine2.xxx.sff sine3.xxx.sff
	susei -nn $^ $@
harmonic.xxx.001.asc: harmonic.xxx.sff
	foutra -v -o -rms -ASCII=$(patsubst %.001.asc,%,$@) \
         -harmonic -div -pad=4 $(HARMSTAPER) junk.xxx.sff $< 
harmspec.xxx.gpt: harmonic.xxx.001.asc
	echo "set output 'harmspec.xxx.ps'" > $@
	echo "set terminal postscript enhanced" >> $@
	echo "set logscale xy" >> $@
	echo "set grid" >> $@
	echo "set title 'amplitude of harmonics'" >> $@
	echo "set xlabel 'frequency / Hz'" >> $@
	echo "set ylabel 'counts'" >> $@
	echo "plot '$<' t 'harmonic amplitude calculated by foutra' w l" >> $@
	echo "set xrange [.1:10.] " >> $@
	echo "set yrange [.1:10.] " >> $@
	echo "plot '$<' t 'harmonic amplitude calculated by foutra' w l" >> $@
	echo "set xrange [0.:2.] " >> $@
	echo "set yrange [0.:3.2] " >> $@
	echo "set nologscale xy" >> $@
	echo "plot '$<' t 'harmonic amplitude calculated by foutra' w l" >> $@
harmspec.xxx.ps: harmspec.xxx.gpt
	gnuplot $<

# ----- END OF Makefile.foutra ----- 
