/*! \file doxygen.txt
 * \brief Documentation of libtfxx
 * ----------------------------------------------------------------------------
 * 
 * \author Thomas Forbriger
 * \date 25/03/2013
 * 
 * Copyright (c) 2013 by Thomas Forbriger (BFO Schiltach) 
 *
 * ----
 * The conv/many suite is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version. 
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 * ----
 * 
 * REVISIONS and CHANGES 
 *  - 25/03/2013   V1.0   Thomas Forbriger
 * 
 * ============================================================================
 */

/*! \mainpage 

\author Thomas Forbriger
\since November 2002
\date January 2014
\version V1.0

\section main_contents Table of contents
  - \ref main_aims
  - \ref main_modules
    - \ref main_module_commandline
    - \ref main_module_io
    - \ref main_module_error
    - \ref main_module_misc
    - \ref main_module_nogroup
  - \ref main_namespaces
  - \ref related_pages
  - \ref main_api_modifications

\section main_aims Aims

  This library contains smaller and independent sets of classes and modules. 
  They should provide stable and reliable interfaces and sematics. Some of
  them will be copied from libclass which was more for experimenting purposes.
  The modules provide handling of commandline options and arguments, I/O byte
  swapping, I/O for Fortran binary files, error handling, and more.
  
\section main_modules Modules

\subsection main_module_commandline Commandline Parameters

  This modules supports a convenient definition and use of commandline
  arguments. You find this module in namespace tfxx::cmdline.
  There are two interfaces available:
  - The \ref commandline_h 
    is used to read optional and mandatory commandline options with or without
    arguments.
  - The \ref xcmdline_h 
    is used to read a list of filenames together with file specific options
    and arguments.

\subsection main_module_io I/O support routines

  \par Bytesex and byte swapping
  \anchor main_module_ioswap 

    This module supports checking of input data bytesex and allows
    swapping of input data bytes.
    You find this module in tfxx::ioswap.
    References to the \ref group_ioswap are collected on a separate page.

  \par Fortran I/O
  \anchor main_module_fortranbinio 

    This module supports reading and writing of Fortran binary data files.
    References to the \ref group_fortranio are collected on a separate page.

\subsection main_module_error Exceptions classes and error handling macros

  This modules provides a convenient exception base class and some error
  handline preprocessor macros.
  \sa tfxx::error
  \sa tfxx::error::Exception
  \sa error.h
  \sa \ref group_error

\subsection main_module_misc Other modules
 
  \sa \ref group_blitzutil

\subsection main_module_nogroup Modules outside groups

  Some of the modules are not explicitely grouped. 
  \sa tfxx::Range

\section main_namespaces Namespaces

  We make excessive use of namespaces. This my seem inconvenient at a first
  glance. Use statements like e.g.

  \code
  using namespace tfxx::cmdline;
  \endcode

  or 

  \code
  using tfxx::fortranio::FortranBinInput;
  \endcode

  for convenient access.

\section related_pages Related Information

  - \ref naming
  - \ref notes
  - \ref general

*/

/*======================================================================*/

/*! \page naming Naming conventions

\section nameing_identifiers Classes, Typedefs, etc.

  During coding it is sometimes helpfull to recognize the meaning of an
  identifier due to some signals in irs name. Therefor the following
  guidelines are used. The nameing of template parameters is left free for
  convenience.

  \par Classes
   
  Class names always start with a capital letter.

  \par Typedefs

  Typedefs always start with a capital \c T.

  \par Member data

  Member data identifiers always start with a capital \c M.

  \par Enums

  Enumeration definitions start with a capital \c E.

  \par Namespaces

  Namespaces will be of any type.

  \par Template parameters

  Template parameters will start with a capital letter but are typically
  shorter than class names.

\section nameing_files Filenames

  Files with the extension \c .cc contain only non-template definitions. Files
  with the extension \c .h may contain prototypes, class declarations or
  template code. Files ending on \c def.h contain template code definitions
  that is factored out to be compilable into a binary library for explicit
  instantiation.

\section main_api_modifications Modification applied to API

  - 28/01/2014 (thof):
    The module provided through readtsdata.h has been moved to
    libtsioxx; readtsdata.h and readtsdata.cc, both have vanished from
    libtfxx; this was necessary in order to disentangle libtsxx and libtfxx

*/

/*======================================================================*/

/*! \page notes Programming notes

  No notes yet...

*/

/*======================================================================*/

/*! \page general General notes

  No notes yet...

*/

// ----- END OF doxygen.txt ----- 
