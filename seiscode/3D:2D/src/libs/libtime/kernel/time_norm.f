c this is <time_norm.f> (extracted from ../libtime.f)
c automatically generated by "SPLITF.PL   V1.0   SPLIT Fortran source code"
c----------------------------------------------------------------------
c
c Copyright 2000 by Thomas Forbriger (IfG Stuttgart)
c
c ----
c libtime is free software; you can redistribute it and/or modify
c it under the terms of the GNU General Public License as published by
c the Free Software Foundation; either version 2 of the License, or
c (at your option) any later version. 
c 
c This program is distributed in the hope that it will be useful,
c but WITHOUT ANY WARRANTY; without even the implied warranty of
c MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
c GNU General Public License for more details.
c 
c You should have received a copy of the GNU General Public License
c along with this program; if not, write to the Free Software
c Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
c ----
c
c regularize any time record (relative or absolute)
c
c REVISIONS and CHANGES
c    05/08/2000   V2.0   Thomas Forbriger
c    07/11/2017   V2.1   fix bug, negative values were not normalized
c                        correctly in cases where they were integer
c                        multiples of the limit values; this cause
c                        problems, when calling time_compare with the
c                        result from time_sub when the result of
c                        time_sub was not properly normalized
c
c ============================================================================
cS
      subroutine time_norm(date)
c
c Regularize any time record (relative or absolute)
c (i.e. set all fields to correct value range)
c
c input/output:
c   date:   date record to be regularized
c
c last change: V2.10 (05/08/2000)
c
      integer date(7)
cE
      integer carry, i, diy
      integer limit(7)
      logical time_isleapyear
      data limit/-1,-1,24,60,60,1000,1000/
c
c set linear value ranges (from hours on)
      do i=7,3,-1
        carry=int(date(i)/limit(i))
        if (date(i).lt.0) carry=int((date(i)+1)/limit(i))-1
        date(i)=date(i)-carry*limit(i)
        date(i-1)=date(i-1)+carry
      enddo
c work on date if not relative
      if (date(1).gt.0) then
c set full 4 digit year
        call time_fullyear(date(1))
        if (date(2).gt.0) then
          if (time_isleapyear(date(1))) then
            diy=366
          else
            diy=365
          endif
    1     if (date(2).le.diy) goto 2
            date(2)=date(2)-diy
            date(1)=date(1)+1
            if (time_isleapyear(date(1))) then
              diy=366
            else
              diy=365
            endif
            goto 1
    2     continue
        else
    3     if (date(2).gt.0) goto 4
            date(1)=date(1)-1
            if (time_isleapyear(date(1))) then
              diy=366
            else
              diy=365
            endif
            date(2)=date(2)+diy
            goto 3
    4     continue
        endif
      endif
      return
      end
c
c ----- END OF <time_norm.f> -----
