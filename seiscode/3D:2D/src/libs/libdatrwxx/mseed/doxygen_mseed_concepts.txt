/*! \file doxygen_mseed_concepts.txt
 * \brief describe concepts of reading MiniSEED data (documentation)
 * 
 * ----------------------------------------------------------------------------
 * 
 * \author Thomas Forbriger
 * \date 23/06/2016
 * 
 * describe concepts of reading MiniSEED data (documentation)
 * 
 * Copyright (c) 2016 by Thomas Forbriger (BFO Schiltach) 
 * 
 * REVISIONS and CHANGES 
 *  - 23/06/2016   V1.0   Thomas Forbriger
 * 
 * ============================================================================
 */

/*! \page page_mseed Concepts for handling MiniSEED data.

  \tableofcontents

*/

/* ---------------------------------------------------------------------- */

/*! \page page_mseed
    \section page_mseed_lib_structure Library structure.
    
    - Module:
      - \ref group_mseed 
    - Namespaces
      - datrw::mseed
      - datrw::mseed::SEED
*/

/* ---------------------------------------------------------------------- */

/*! \page page_mseed
    \section page_mseed_file_structure File structure.

*/

/* ---------------------------------------------------------------------- */

/*! \page page_mseed
    
    \section page_mseed_reading_structure Process of reading files.

    \sa datrw::mseed, \ref sec_mseed_concept, datrw::imseedstream::read

     - datrw::imseedstream has a member data of type datrw::mseed::Record
     - datrw::mseed::Record is used to encapsulate MiniSEED specific functions
       and classes and hide them from mseed.h
     - datrw::mseed::Record::read is the interface to MiniSEED reading
       facilities
     - actual reading is organized in datrw::mseed::MiniSEEDRecord

    \subsection page_mseed_reading_structure_imseedread imseedread

    datrw::imseedstream holds member data datrw::imseedstream::Mrecord
    (which is of type datrw::mseed::Record).
    This is once filled upon instantiation in the constructor
    datrw::imseedstream::imseedstream (read ahead) and is used in
    datrw::imseedstream::read to extract data from the file.
    In datrw::imseedstream::read datrw::mseed::Record::read is called
    repeatedly in order to fill datrw::imseedstream::Mrecord with the next
    record.
    datrw::imseedstream::read checks for contiguous chunks of data and
    passes them as one trace each to the reception member functions
    of base class datrw::idatstream.

    To skip data just means that datrw::imseedstream::read does not extract
    the sample values. 
    In any case samples are read and collected in an STL vector in
    datrw::imseedstream::read.

    \subsection page_mseed_reading_structure_mseed_Record mseed::Record

    datrw::mseed::Record is just used to encapsulate data read from one
    MiniSEED-record such that MiniSEED internals need not be exposed to all
    library users through mseed.h
    The reading function datrw::mseed::Record::read instatiates data of type
    datrw::mseed::MiniSEEDRecord.
    It then reads the next MiniSEED-record to this data field through 
    datrw::mseed::operator>>(std::istream &is, MiniSEEDRecord &mr) (which just
    delegates to datrw::mseed::MiniSEEDRecord::read.
    The such read data record then is passed to member data of the instance of
    type datrw::mseed::Record and such be made available to the instance of
    datrw::imseedstream to which it belongs.

    \subsection page_mseed_reading_structure_mseed_MiniSEEDRecord mseed::MiniSEEDRecord

    \subsection page_mseed_reading_structure_mseed_MiniSEEDblock mseed::MiniSEEDblock

    mseed::MiniSEEDblock is used to read exactly one block of binary data into
    mseed::MiniSEEDblock::Mblock through 
    datrw::mseed::operator>> (std::istream &is, MiniSEEDblock &mb).
    The only purpose of this class is, to hold a binary data of previously
    defined block size and to provide byte-by-byte access.

    Currently at no place a block size different to the standard block size is
    used.

*/
 
*/ // page_mseed Concepts for handling MiniSEED data.

/* ====================================================================== */

/* ----- END OF doxygen_mseed_concepts.txt ----- */
